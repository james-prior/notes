Once per Linux user:

    cp -p .bashrc .bashrc-before-conda
    cd ~
    bash /home/dojo/conda/repo.continuum.io/miniconda/Miniconda-latest-Linux-x86.sh
    (follow defaults)
    
    Edit .bashrc to append its directory instead of prepending it. E.g.:

        dojo@4519_n_high:~$ diff .bashrc-before-miniconda .bashrc
        134a135,140
        > 
        > #!!!# added by Miniconda 3.10.1 installer
        > #!!!export PATH="/home/dojo/miniconda/bin:$PATH"
        > 
        > # modified by dojo to _append_ instead of prepend
        > export PATH="$PATH:/home/dojo/miniconda/bin"
        dojo@4519_n_high:~$ 

    Close terminal window and open new terminal window to use above changes.

        conda --version
        conda update conda
        conda --version

    Install anaconda-client tool.
    You will need it eventually. Might as well get it down now.

        conda install anaconda-client

once per project: create new environment

    # must specify packages for project. cannot create empty environment
    # try to install all packages at once to avoid version skew problems

    conda create --name myproject configobj

to begin using an environment:

    source activate myproject

to quit using an environment:

    source deactivate

miscellaneous

    # to get help
    conda whatevercommand -h

    # list all environments
    conda list --envs

    # lists environment names and paths. '*' indicates active environment
    conda info --envs

    # list versions of python available
    conda list python

    anaconda search -t conda pytest-xdist

    # Create environment with newest version of Python 3.
    conda create --name snakes python=3

    # show python and package versions installed in current environment
    conda list

    # check to see if package is available by conda for current python
    conda search beautiful-soup

    # install package in an environment (does not have to be active)
    conda install --name bunnies beautiful-soup

    # update a package
    conda update --name bunnies beautiful-soup

    # remove package in an environment (does not have to be active)
    conda remove --name bunnies beautiful-soup

    # for packages that conda can not install,
    # use pip within a conda environment
    source activate bunnies
    pip install pytest-xdist

    source activate bunnies
    pip uninstall pytest-xdist

    # See also cheatsheet
    http://conda.pydata.org/docs/_downloads/conda-cheatsheet.pdf

    # uninstall miniconda
    # rm -rf ~/miniconda

# environments/projects are subdirectories of /home/dojo/miniconda/envs
# One can go directly from one environment to another.
